#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.25.1
#  in conjunction with Tcl version 8.6
#    Sep 18, 2019 08:26:52 PM CEST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import mainWindow_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    mainWindow_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    mainWindow_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("970x769+357+146")
        top.title("YouTubeCommenter")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Info_Frame = tk.Frame(top)
        self.Info_Frame.place(relx=0.01, rely=0.299, relheight=0.228
                , relwidth=0.974)
        self.Info_Frame.configure(relief='groove')
        self.Info_Frame.configure(borderwidth="2")
        self.Info_Frame.configure(relief="groove")
        self.Info_Frame.configure(background="#d9d9d9")
        self.Info_Frame.configure(highlightbackground="#f0f0f0")
        self.Info_Frame.configure(highlightcolor="black")

        self.Label_year = tk.Label(self.Info_Frame)
        self.Label_year.place(relx=0.042, rely=0.114, height=31, width=64)
        self.Label_year.configure(activebackground="#f9f9f9")
        self.Label_year.configure(activeforeground="black")
        self.Label_year.configure(anchor='e')
        self.Label_year.configure(background="#d9d9d9")
        self.Label_year.configure(disabledforeground="#a3a3a3")
        self.Label_year.configure(foreground="#000000")
        self.Label_year.configure(highlightbackground="#d9d9d9")
        self.Label_year.configure(highlightcolor="black")
        self.Label_year.configure(text='''Year''')

        self.Label_month = tk.Label(self.Info_Frame)
        self.Label_month.place(relx=0.233, rely=0.114, height=31, width=84)
        self.Label_month.configure(activebackground="#f9f9f9")
        self.Label_month.configure(activeforeground="black")
        self.Label_month.configure(anchor='e')
        self.Label_month.configure(background="#d9d9d9")
        self.Label_month.configure(disabledforeground="#a3a3a3")
        self.Label_month.configure(foreground="#000000")
        self.Label_month.configure(highlightbackground="#d9d9d9")
        self.Label_month.configure(highlightcolor="black")
        self.Label_month.configure(text='''Month''')

        self.Label_keyword = tk.Label(self.Info_Frame)
        self.Label_keyword.place(relx=0.444, rely=0.114, height=31, width=105)
        self.Label_keyword.configure(activebackground="#f9f9f9")
        self.Label_keyword.configure(activeforeground="black")
        self.Label_keyword.configure(anchor='e')
        self.Label_keyword.configure(background="#d9d9d9")
        self.Label_keyword.configure(disabledforeground="#a3a3a3")
        self.Label_keyword.configure(foreground="#000000")
        self.Label_keyword.configure(highlightbackground="#d9d9d9")
        self.Label_keyword.configure(highlightcolor="black")
        self.Label_keyword.configure(text='''keyWord''')

        self.text_year = tk.Text(self.Info_Frame)
        self.text_year.place(relx=0.116, rely=0.143, relheight=0.137
                , relwidth=0.106)
        self.text_year.configure(background="white")
        self.text_year.configure(font="TkTextFont")
        self.text_year.configure(foreground="black")
        self.text_year.configure(highlightbackground="#d9d9d9")
        self.text_year.configure(highlightcolor="black")
        self.text_year.configure(insertbackground="black")
        self.text_year.configure(selectbackground="#c4c4c4")
        self.text_year.configure(selectforeground="black")
        self.text_year.configure(wrap="word")

        self.text_month = tk.Text(self.Info_Frame)
        self.text_month.place(relx=0.323, rely=0.143, relheight=0.137
                , relwidth=0.106)
        self.text_month.configure(background="white")
        self.text_month.configure(font="TkTextFont")
        self.text_month.configure(foreground="black")
        self.text_month.configure(highlightbackground="#d9d9d9")
        self.text_month.configure(highlightcolor="black")
        self.text_month.configure(insertbackground="black")
        self.text_month.configure(selectbackground="#c4c4c4")
        self.text_month.configure(selectforeground="black")
        self.text_month.configure(wrap="word")

        self.text_keyword = tk.Text(self.Info_Frame)
        self.text_keyword.place(relx=0.561, rely=0.143, relheight=0.137
                , relwidth=0.317)
        self.text_keyword.configure(background="white")
        self.text_keyword.configure(font="TkTextFont")
        self.text_keyword.configure(foreground="black")
        self.text_keyword.configure(highlightbackground="#d9d9d9")
        self.text_keyword.configure(highlightcolor="black")
        self.text_keyword.configure(insertbackground="black")
        self.text_keyword.configure(selectbackground="#c4c4c4")
        self.text_keyword.configure(selectforeground="black")
        self.text_keyword.configure(wrap="word")

        self.Label_comment = tk.Label(self.Info_Frame)
        self.Label_comment.place(relx=0.021, rely=0.286, height=31, width=84)
        self.Label_comment.configure(activebackground="#f9f9f9")
        self.Label_comment.configure(activeforeground="black")
        self.Label_comment.configure(anchor='e')
        self.Label_comment.configure(background="#d9d9d9")
        self.Label_comment.configure(disabledforeground="#a3a3a3")
        self.Label_comment.configure(foreground="#000000")
        self.Label_comment.configure(highlightbackground="#d9d9d9")
        self.Label_comment.configure(highlightcolor="black")
        self.Label_comment.configure(text='''Comment''')

        self.text_comment = tk.Text(self.Info_Frame)
        self.text_comment.place(relx=0.116, rely=0.343, relheight=0.594
                , relwidth=0.311)
        self.text_comment.configure(background="white")
        self.text_comment.configure(font="TkTextFont")
        self.text_comment.configure(foreground="black")
        self.text_comment.configure(highlightbackground="#d9d9d9")
        self.text_comment.configure(highlightcolor="black")
        self.text_comment.configure(insertbackground="black")
        self.text_comment.configure(selectbackground="#c4c4c4")
        self.text_comment.configure(selectforeground="black")
        self.text_comment.configure(wrap="word")

        self.Button_startComment = tk.Button(self.Info_Frame)
        self.Button_startComment.place(relx=0.571, rely=0.629, height=34
                , width=242)
        self.Button_startComment.configure(activebackground="#ececec")
        self.Button_startComment.configure(activeforeground="#000000")
        self.Button_startComment.configure(background="#d9d9d9")
        self.Button_startComment.configure(disabledforeground="#a3a3a3")
        self.Button_startComment.configure(foreground="#000000")
        self.Button_startComment.configure(highlightbackground="#d9d9d9")
        self.Button_startComment.configure(highlightcolor="black")
        self.Button_startComment.configure(pady="0")
        self.Button_startComment.configure(text='''Start Comment''')

        self.Authentication_Frame = tk.Frame(top)
        self.Authentication_Frame.place(relx=0.124, rely=0.013, relheight=0.254
                , relwidth=0.768)
        self.Authentication_Frame.configure(relief='groove')
        self.Authentication_Frame.configure(borderwidth="2")
        self.Authentication_Frame.configure(relief="groove")
        self.Authentication_Frame.configure(background="#d9d9d9")
        self.Authentication_Frame.configure(highlightbackground="#d9d9d9")
        self.Authentication_Frame.configure(highlightcolor="black")

        self.Button_createConnection = tk.Button(self.Authentication_Frame)
        self.Button_createConnection.place(relx=0.013, rely=0.103, height=104
                , width=277)
        self.Button_createConnection.configure(activebackground="#ececec")
        self.Button_createConnection.configure(activeforeground="#000000")
        self.Button_createConnection.configure(background="#d9d9d9")
        self.Button_createConnection.configure(disabledforeground="#a3a3a3")
        self.Button_createConnection.configure(foreground="#000000")
        self.Button_createConnection.configure(highlightbackground="#d9d9d9")
        self.Button_createConnection.configure(highlightcolor="black")
        self.Button_createConnection.configure(pady="0")
        self.Button_createConnection.configure(text='''Create Conniction with Google Account''')

        self.Label_codeInfo = tk.Label(self.Authentication_Frame)
        self.Label_codeInfo.place(relx=0.013, rely=0.718, height=21, width=244)
        self.Label_codeInfo.configure(activebackground="#f9f9f9")
        self.Label_codeInfo.configure(activeforeground="black")
        self.Label_codeInfo.configure(background="#d9d9d9")
        self.Label_codeInfo.configure(disabledforeground="#a3a3a3")
        self.Label_codeInfo.configure(foreground="#000000")
        self.Label_codeInfo.configure(highlightbackground="#d9d9d9")
        self.Label_codeInfo.configure(highlightcolor="black")
        self.Label_codeInfo.configure(text='''insert the return code from Google Auth here''')

        self.Text_code = tk.Text(self.Authentication_Frame)
        self.Text_code.place(relx=0.013, rely=0.821, relheight=0.123
                , relwidth=0.757)
        self.Text_code.configure(background="white")
        self.Text_code.configure(font="TkTextFont")
        self.Text_code.configure(foreground="black")
        self.Text_code.configure(highlightbackground="#d9d9d9")
        self.Text_code.configure(highlightcolor="black")
        self.Text_code.configure(insertbackground="black")
        self.Text_code.configure(selectbackground="#c4c4c4")
        self.Text_code.configure(selectforeground="black")
        self.Text_code.configure(wrap="word")

        self.Button_submetCode = tk.Button(self.Authentication_Frame)
        self.Button_submetCode.place(relx=0.779, rely=0.821, height=34
                , width=143)
        self.Button_submetCode.configure(activebackground="#ececec")
        self.Button_submetCode.configure(activeforeground="#000000")
        self.Button_submetCode.configure(background="#d9d9d9")
        self.Button_submetCode.configure(disabledforeground="#a3a3a3")
        self.Button_submetCode.configure(foreground="#000000")
        self.Button_submetCode.configure(highlightbackground="#d9d9d9")
        self.Button_submetCode.configure(highlightcolor="black")
        self.Button_submetCode.configure(pady="0")
        self.Button_submetCode.configure(text='''Submit the Code''')

        self.Text_LinkAuth = tk.Text(self.Authentication_Frame)
        self.Text_LinkAuth.place(relx=0.389, rely=0.103, relheight=0.533
                , relwidth=0.583)
        self.Text_LinkAuth.configure(background="white")
        self.Text_LinkAuth.configure(font="TkTextFont")
        self.Text_LinkAuth.configure(foreground="black")
        self.Text_LinkAuth.configure(highlightbackground="#d9d9d9")
        self.Text_LinkAuth.configure(highlightcolor="black")
        self.Text_LinkAuth.configure(insertbackground="black")
        self.Text_LinkAuth.configure(selectbackground="#c4c4c4")
        self.Text_LinkAuth.configure(selectforeground="black")
        self.Text_LinkAuth.configure(wrap="word")

        self.Output_Frame = tk.Frame(top)
        self.Output_Frame.place(relx=0.01, rely=0.559, relheight=0.358
                , relwidth=0.974)
        self.Output_Frame.configure(relief='groove')
        self.Output_Frame.configure(borderwidth="2")
        self.Output_Frame.configure(relief="groove")
        self.Output_Frame.configure(background="#d9d9d9")
        self.Output_Frame.configure(highlightbackground="#d9d9d9")
        self.Output_Frame.configure(highlightcolor="black")

        self.OutputList = tk.Listbox(self.Output_Frame)
        self.OutputList.place(relx=0.011, rely=0.109, relheight=0.844
                , relwidth=0.978)
        self.OutputList.configure(background="white")
        self.OutputList.configure(disabledforeground="#a3a3a3")
        self.OutputList.configure(font="TkFixedFont")
        self.OutputList.configure(foreground="#000000")
        self.OutputList.configure(highlightbackground="#d9d9d9")
        self.OutputList.configure(highlightcolor="black")
        self.OutputList.configure(selectbackground="#c4c4c4")
        self.OutputList.configure(selectforeground="black")

        self.Label_outputList = tk.Label(self.Output_Frame)
        self.Label_outputList.place(relx=0.011, rely=0.036, height=21, width=75)
        self.Label_outputList.configure(activebackground="#f9f9f9")
        self.Label_outputList.configure(activeforeground="black")
        self.Label_outputList.configure(background="#d9d9d9")
        self.Label_outputList.configure(disabledforeground="#a3a3a3")
        self.Label_outputList.configure(foreground="#000000")
        self.Label_outputList.configure(highlightbackground="#d9d9d9")
        self.Label_outputList.configure(highlightcolor="black")
        self.Label_outputList.configure(text='''Outbuts Lists''')

if __name__ == '__main__':
    vp_start_gui()





